{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cppad\\\\Desktop\\\\react-ui\\\\E-Pariksha\\\\final\\\\src\\\\QuestionService.js\";\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport QuestionF from './component/QuestionF';\nconst API_URL = \"http://localhost:8081/admin/question\";\n\nfunction QuestionService(props) {\n  const temp = props.currIdx;\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0); //let currentIndex = temp;\n\n  const [score, setScore] = useState(0); // const [dummy, setDummy] = useState(0)\n\n  console.log(temp, currentIndex); // const setCurrentIndex = (i) =>{\n  //     currentIndex = i;\n  //     console.log(currentIndex)\n  //     setDummy(i);\n  // }\n\n  useEffect(() => {\n    Axios.get(API_URL).then(res => res.data).then(data => {\n      const questions = data.map(question => ({ ...question,\n        id: [question.questionId],\n        options: [question.option1, question.option2, question.option3, question.option4]\n      }));\n      setQuestions(questions);\n    });\n  }, []);\n\n  const handleAnswer = checked => {\n    if (checked === questions[currentIndex].answer) {\n      setScore(score + 1);\n    }\n  }; // console.log(handleAnswer)\n\n\n  const handleNextQuestion = () => {\n    // setCurrentIndex(props.currIdx)\n    setCurrentIndex(currentIndex + 1);\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentIndex <= 0) {\n      setCurrentIndex(0);\n    } else {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  return questions.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, currentIndex >= questions.length ? alert('You have reached to last question') : /*#__PURE__*/React.createElement(QuestionF, {\n    handleAnswer: handleAnswer,\n    handleNextQuestion: handleNextQuestion,\n    handlePreviousQuestion: handlePreviousQuestion,\n    data: questions[currentIndex],\n    initial: questions[props.currIdx],\n    selectedAnswer: handleAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 64\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Loading...\");\n}\n\nexport default QuestionService;","map":{"version":3,"sources":["C:/Users/cppad/Desktop/react-ui/E-Pariksha/final/src/QuestionService.js"],"names":["Axios","React","useState","useEffect","QuestionF","API_URL","QuestionService","props","temp","currIdx","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","console","log","get","then","res","data","map","question","id","questionId","options","option1","option2","option3","option4","handleAnswer","checked","answer","handleNextQuestion","handlePreviousQuestion","length","alert"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B,QAAMC,IAAI,GAAGD,KAAK,CAACE,OAAnB;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD,CAP4B,CAQ5B;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC,CAT4B,CAU5B;;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAiBI,YAAjB,EAZ4B,CAc5B;AACA;AACA;AACA;AACA;;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,KAAK,CAACkB,GAAN,CAAUb,OAAV,EACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IADrB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,YAAMX,SAAS,GAAGW,IAAI,CAACC,GAAL,CAAUC,QAAD,KAAe,EACtC,GAAGA,QADmC;AAEtCC,QAAAA,EAAE,EAAE,CAACD,QAAQ,CAACE,UAAV,CAFkC;AAGtCC,QAAAA,OAAO,EAAE,CAACH,QAAQ,CAACI,OAAV,EAAmBJ,QAAQ,CAACK,OAA5B,EAAqCL,QAAQ,CAACM,OAA9C,EAAuDN,QAAQ,CAACO,OAAhE;AAH6B,OAAf,CAAT,CAAlB;AAKAnB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AAGH,KAXL;AAYH,GAbQ,EAaN,EAbM,CAAT;;AAgBA,QAAMqB,YAAY,GAAIC,OAAD,IAAa;AAC9B,QAAIA,OAAO,KAAKtB,SAAS,CAACE,YAAD,CAAT,CAAwBqB,MAAxC,EAAgD;AAC5ClB,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;AACJ,GAJD,CArC4B,CA0C5B;;;AAKA,QAAMoB,kBAAkB,GAAG,MAAM;AAC7B;AACArB,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AAGH,GALD;;AAMA,QAAMuB,sBAAsB,GAAG,MAAM;AACjC,QAAIvB,YAAY,IAAI,CAApB,EAAuB;AACnBC,MAAAA,eAAe,CAAC,CAAD,CAAf;AACH,KAFD,MAGK;AACDA,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACH;AACJ,GAPD;;AASA,SAAQF,SAAS,CAAC0B,MAAV,GAAmB,CAAnB,gBAEJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKxB,YAAY,IAAIF,SAAS,CAAC0B,MAA1B,GACGC,KAAK,CAAC,mCAAD,CADR,gBACkD,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEN,YAAzB;AAC3C,IAAA,kBAAkB,EAAEG,kBADuB;AAE3C,IAAA,sBAAsB,EAAEC,sBAFmB;AAG3C,IAAA,IAAI,EAAEzB,SAAS,CAACE,YAAD,CAH4B;AAI3C,IAAA,OAAO,EAAEF,SAAS,CAACH,KAAK,CAACE,OAAP,CAJyB;AAK3C,IAAA,cAAc,EAAEsB,YAL2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHvD,CAFI,gBAcJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAiBH;;AAED,eAAezB,eAAf","sourcesContent":["\r\nimport Axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionF from './component/QuestionF';\r\n\r\nconst API_URL = \"http://localhost:8081/admin/question\";\r\n\r\nfunction QuestionService(props) {\r\n\r\n    const temp = props.currIdx;\r\n\r\n    \r\n    \r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    //let currentIndex = temp;\r\n    const [score, setScore] = useState(0);\r\n    // const [dummy, setDummy] = useState(0)\r\n    \r\n    console.log(temp,currentIndex)\r\n\r\n    // const setCurrentIndex = (i) =>{\r\n    //     currentIndex = i;\r\n    //     console.log(currentIndex)\r\n    //     setDummy(i);\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(API_URL)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                const questions = data.map((question) => ({\r\n                    ...question,\r\n                    id: [question.questionId],\r\n                    options: [question.option1, question.option2, question.option3, question.option4]\r\n                }))\r\n                setQuestions(questions)\r\n               \r\n               \r\n            });\r\n    }, [])\r\n\r\n    \r\n    const handleAnswer = (checked) => {\r\n        if (checked === questions[currentIndex].answer) {\r\n            setScore(score + 1);\r\n        }\r\n    }\r\n    // console.log(handleAnswer)\r\n    \r\n   \r\n\r\n\r\n    const handleNextQuestion = () => {\r\n        // setCurrentIndex(props.currIdx)\r\n        setCurrentIndex(currentIndex + 1);\r\n\r\n\r\n    }\r\n    const handlePreviousQuestion = () => {\r\n        if (currentIndex <= 0) {\r\n            setCurrentIndex(0)\r\n        }\r\n        else {\r\n            setCurrentIndex(currentIndex - 1);\r\n        }\r\n    }\r\n\r\n    return (questions.length > 0 ? (\r\n\r\n        <div className=\"container\">\r\n            \r\n            {currentIndex >= questions.length ? (\r\n                alert('You have reached to last question')) : (<QuestionF handleAnswer={handleAnswer}\r\n                    handleNextQuestion={handleNextQuestion}\r\n                    handlePreviousQuestion={handlePreviousQuestion}\r\n                    data={questions[currentIndex]}\r\n                    initial={questions[props.currIdx]}\r\n                    selectedAnswer={handleAnswer}\r\n                   />)}\r\n        </div>\r\n\r\n    ) : <div className=\"container\">Loading...</div>\r\n\r\n    );\r\n}\r\n\r\nexport default QuestionService;\r\n"]},"metadata":{},"sourceType":"module"}