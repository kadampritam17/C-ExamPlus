{"ast":null,"code":"var _jsxFileName = \"D:\\\\DAC Project\\\\E-Pariksha\\\\UI\\\\FinalUI\\\\react-ui\\\\E-Pariksha\\\\final\\\\src\\\\component\\\\QuestionF.js\";\nimport React, { useState } from 'react';\nexport default function QuestionF({\n  finalR,\n  currId,\n  totalLength,\n  handleNextQuestion,\n  handlePreviousQuestion,\n  data: {\n    question,\n    id,\n    options,\n    answers\n  }\n}) {\n  var b = totalLength;\n  let bl = new Array(b);\n  const [arr, setArr] = useState(bl);\n  let result = 0;\n  let a = answers[0];\n\n  const onChangeValue = event => {\n    result = event.target.value;\n\n    for (let i = 0; i < bl.length; i++) {\n      if (id - 1 === i) {\n        if (result.trim() === a.trim()) {\n          arr[i] = 1;\n        } else arr[i] = 0;\n      }\n    }\n\n    setArr(arr);\n  }; //calculating result    \n\n\n  const countOccurrences = (arr, val) => arr.reduce((a, v) => v === val ? a + 1 : a, 0); // final value contains total live score of exam\n\n\n  var final = countOccurrences(arr, 1); //Forwarding result value to Exam.js\n\n  finalR(final); //Rendering\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Question No. \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 53\n    }\n  }, \"| \", id, \" \")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-primary fw-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, question)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, options.map(option => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-primary fw-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: id,\n      value: option,\n      onChange: onChangeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 71\n      }\n    }), \" \", option));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    style: {\n      'position': 'absolute',\n      'bottom': '35px'\n    },\n    onClick: handlePreviousQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Previous Question\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      'margin-right': '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \",\n    style: {\n      'position': 'absolute',\n      'bottom': '35px'\n    },\n    onClick: handleNextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Next Question\")));\n}","map":{"version":3,"sources":["D:/DAC Project/E-Pariksha/UI/FinalUI/react-ui/E-Pariksha/final/src/component/QuestionF.js"],"names":["React","useState","QuestionF","finalR","currId","totalLength","handleNextQuestion","handlePreviousQuestion","data","question","id","options","answers","b","bl","Array","arr","setArr","result","a","onChangeValue","event","target","value","i","length","trim","countOccurrences","val","reduce","v","final","map","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA,kBAA/B;AAAmDC,EAAAA,sBAAnD;AAA2EC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,EAAZ;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB;AAAjF,CAAnB,EAA0I;AAErJ,MAAIC,CAAC,GAAGR,WAAR;AACA,MAAIS,EAAE,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAT;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAACa,EAAD,CAA9B;AACA,MAAII,MAAM,GAAG,CAAb;AACA,MAAIC,CAAC,GAAGP,OAAO,CAAC,CAAD,CAAf;;AAGA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,MAAM,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAAtB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,EAAE,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,UAAId,EAAE,GAAG,CAAL,KAAWc,CAAf,EAAkB;AACd,YAAIN,MAAM,CAACQ,IAAP,OAAkBP,CAAC,CAACO,IAAF,EAAtB,EAAgC;AAC5BV,UAAAA,GAAG,CAACQ,CAAD,CAAH,GAAS,CAAT;AACH,SAFD,MAIIR,GAAG,CAACQ,CAAD,CAAH,GAAS,CAAT;AACP;AACJ;;AACDP,IAAAA,MAAM,CAACD,GAAD,CAAN;AACH,GAbD,CATqJ,CAwBrJ;;;AACA,QAAMW,gBAAgB,GAAG,CAACX,GAAD,EAAMY,GAAN,KAAcZ,GAAG,CAACa,MAAJ,CAAW,CAACV,CAAD,EAAIW,CAAJ,KAAWA,CAAC,KAAKF,GAAN,GAAYT,CAAC,GAAG,CAAhB,GAAoBA,CAA1C,EAA8C,CAA9C,CAAvC,CAzBqJ,CA0BrJ;;;AACA,MAAIY,KAAK,GAAIJ,gBAAgB,CAACX,GAAD,EAAM,CAAN,CAA7B,CA3BqJ,CA6BrJ;;AACAb,EAAAA,MAAM,CAAC4B,KAAD,CAAN,CA9BqJ,CAiCrJ;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASrB,EAAT,MAAxC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCD,QAAtC,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,CAACqB,GAAR,CAAaC,MAAD,IAAY;AACrB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsC;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAEvB,EAA1B;AAA8B,MAAA,KAAK,EAAEuB,MAArC;AAA6C,MAAA,QAAQ,EAAEb,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,OAAuHa,MAAvH,CADJ,CADJ;AAIH,GALA,CADL,CALJ,CAHJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEQ;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,KAAK,EAAE;AAAE,kBAAY,UAAd;AAA0B,gBAAU;AAApC,KAA5C;AAA0F,IAAA,OAAO,EAAE1B,sBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFR,eAII;AAAM,IAAA,KAAK,EAAE;AAAE,sBAAgB;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAMQ;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,KAAK,EAAE;AAAE,kBAAY,UAAd;AAA0B,gBAAU;AAApC,KAA5C;AAA0F,IAAA,OAAO,EAAED,kBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANR,CAjBJ,CADJ;AA6BH","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function QuestionF({ finalR, currId, totalLength, handleNextQuestion, handlePreviousQuestion, data: { question, id, options, answers } }) {\r\n\r\n    var b = totalLength\r\n    let bl = new Array(b);\r\n    const [arr, setArr] = useState(bl)\r\n    let result = 0;\r\n    let a = answers[0];\r\n\r\n\r\n    const onChangeValue = (event) => {\r\n        result = event.target.value;\r\n\r\n        for (let i = 0; i < bl.length; i++) {\r\n            if (id - 1 === i) {\r\n                if (result.trim() === a.trim()) {\r\n                    arr[i] = 1;\r\n                }\r\n                else\r\n                    arr[i] = 0;\r\n            }\r\n        }\r\n        setArr(arr)\r\n    }\r\n\r\n    //calculating result    \r\n    const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n    // final value contains total live score of exam\r\n    var final = (countOccurrences(arr, 1));\r\n\r\n    //Forwarding result value to Exam.js\r\n    finalR(final);\r\n\r\n\r\n    //Rendering\r\n    return (\r\n        <div>\r\n            <h5 className=\"card-title\">Question No. <span>| {id} </span></h5>\r\n            <hr />\r\n            <table className=\"table table-borderless\">\r\n                <thead>\r\n                    <td className=\"text-primary fw-bold\">{question}</td>\r\n                </thead>\r\n                <br></br>\r\n                <tbody >\r\n                    {options.map((option) => {\r\n                        return (\r\n                            <tr >\r\n                                <td className=\"text-primary fw-bold\" ><input type=\"radio\" name={id} value={option} onChange={onChangeValue} ></input> {option}</td>\r\n                            </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                {(\r\n                    <button className=\"btn btn-primary \" style={{ 'position': 'absolute', 'bottom': '35px' }} onClick={handlePreviousQuestion}>Previous Question</button>\r\n                )}\r\n                <span style={{ 'margin-right': '15%' }}></span>\r\n                {(\r\n                    <button className=\"btn btn-primary \" style={{ 'position': 'absolute', 'bottom': '35px' }} onClick={handleNextQuestion}>Next Question</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}