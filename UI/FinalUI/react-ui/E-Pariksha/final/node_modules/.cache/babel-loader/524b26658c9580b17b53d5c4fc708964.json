{"ast":null,"code":"var _jsxFileName = \"D:\\\\DAC Project\\\\E-Pariksha\\\\UI\\\\FinalUI\\\\react-ui\\\\E-Pariksha\\\\final\\\\src\\\\component\\\\QuestionService.js\";\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport QuestionF from './QuestionF';\nconst API_URL = \"http://localhost:8081/admin/getquestions\";\n\nfunction QuestionService(props) {\n  let temp = props.currIdx;\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0); //Fetching Questions data from database\n\n  useEffect(() => {\n    Axios.get(API_URL).then(res => res.data).then(data => {\n      const questions = data.map(question => ({ ...question,\n        id: [question.questionId],\n        options: [question.option1, question.option2, question.option3, question.option4],\n        answers: [question.answer]\n      }));\n      setQuestions(questions);\n      setCurrentIndex(temp);\n    });\n  }, [props]); // For Next Question\n\n  const handleNextQuestion = () => {\n    setCurrentIndex(currentIndex + 1);\n  }; // For Previous Question\n\n\n  const handlePreviousQuestion = () => {\n    if (currentIndex <= 0) {\n      setCurrentIndex(0);\n    } else {\n      setCurrentIndex(currentIndex - 1);\n    }\n  }; // Conditional Rendering\n\n\n  return questions.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, currentIndex >= questions.length ? alert('You have reached to last question') : /*#__PURE__*/React.createElement(QuestionF, {\n    handleNextQuestion: handleNextQuestion,\n    handlePreviousQuestion: handlePreviousQuestion,\n    data: questions[currentIndex],\n    totalLength: questions.length,\n    currId: temp,\n    finalR: props.resFun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 64\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Loading...\");\n}\n\nexport default QuestionService;","map":{"version":3,"sources":["D:/DAC Project/E-Pariksha/UI/FinalUI/react-ui/E-Pariksha/final/src/component/QuestionService.js"],"names":["Axios","React","useState","useEffect","QuestionF","API_URL","QuestionService","props","temp","currIdx","questions","setQuestions","currentIndex","setCurrentIndex","get","then","res","data","map","question","id","questionId","options","option1","option2","option3","option4","answers","answer","handleNextQuestion","handlePreviousQuestion","length","alert","resFun"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,MAAMC,OAAO,GAAG,0CAAhB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B,MAAIC,IAAI,GAAGD,KAAK,CAACE,OAAjB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD,CAL4B,CAO5B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,KAAK,CAACc,GAAN,CAAUT,OAAV,EACKU,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IADrB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,YAAMP,SAAS,GAAGO,IAAI,CAACC,GAAL,CAAUC,QAAD,KAAe,EACtC,GAAGA,QADmC;AAEtCC,QAAAA,EAAE,EAAE,CAACD,QAAQ,CAACE,UAAV,CAFkC;AAGtCC,QAAAA,OAAO,EAAE,CAACH,QAAQ,CAACI,OAAV,EAAmBJ,QAAQ,CAACK,OAA5B,EAAqCL,QAAQ,CAACM,OAA9C,EAAuDN,QAAQ,CAACO,OAAhE,CAH6B;AAItCC,QAAAA,OAAO,EAAE,CAACR,QAAQ,CAACS,MAAV;AAJ6B,OAAf,CAAT,CAAlB;AAMAjB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,MAAAA,eAAe,CAACL,IAAD,CAAf;AACH,KAXL;AAYH,GAbQ,EAaN,CAACD,KAAD,CAbM,CAAT,CAR4B,CAwB5B;;AACA,QAAMsB,kBAAkB,GAAG,MAAM;AAC7BhB,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACH,GAFD,CAzB4B,CA6B5B;;;AACA,QAAMkB,sBAAsB,GAAG,MAAM;AACjC,QAAIlB,YAAY,IAAI,CAApB,EAAuB;AAAEC,MAAAA,eAAe,CAAC,CAAD,CAAf;AAAoB,KAA7C,MACK;AAAEA,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AAAoC;AAC9C,GAHD,CA9B4B,CAoC5B;;;AACA,SAAQF,SAAS,CAACqB,MAAV,GAAmB,CAAnB,gBACJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,YAAY,IAAIF,SAAS,CAACqB,MAA1B,GACGC,KAAK,CAAC,mCAAD,CADR,gBACkD,oBAAC,SAAD;AAC3C,IAAA,kBAAkB,EAAEH,kBADuB;AAE3C,IAAA,sBAAsB,EAAEC,sBAFmB;AAG3C,IAAA,IAAI,EAAEpB,SAAS,CAACE,YAAD,CAH4B;AAI3C,IAAA,WAAW,EAAEF,SAAS,CAACqB,MAJoB;AAK3C,IAAA,MAAM,EAAEvB,IALmC;AAM3C,IAAA,MAAM,EAAED,KAAK,CAAC0B,MAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvD,CADI,gBAYJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAcH;;AACD,eAAe3B,eAAf","sourcesContent":["import Axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionF from './QuestionF';\r\n\r\n\r\nconst API_URL = \"http://localhost:8081/admin/getquestions\";\r\n\r\nfunction QuestionService(props) {\r\n\r\n    let temp = props.currIdx;\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    //Fetching Questions data from database\r\n    useEffect(() => {\r\n        Axios.get(API_URL)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                const questions = data.map((question) => ({\r\n                    ...question,\r\n                    id: [question.questionId],\r\n                    options: [question.option1, question.option2, question.option3, question.option4],\r\n                    answers: [question.answer]\r\n                }))\r\n                setQuestions(questions)\r\n                setCurrentIndex(temp)\r\n            });\r\n    }, [props])\r\n\r\n\r\n    // For Next Question\r\n    const handleNextQuestion = () => {\r\n        setCurrentIndex(currentIndex + 1);\r\n    }\r\n\r\n    // For Previous Question\r\n    const handlePreviousQuestion = () => {\r\n        if (currentIndex <= 0) { setCurrentIndex(0) }\r\n        else { setCurrentIndex(currentIndex - 1); }\r\n    }\r\n\r\n\r\n    // Conditional Rendering\r\n    return (questions.length > 0 ? (\r\n        <div className=\"container\">\r\n            {currentIndex >= questions.length ? (\r\n                alert('You have reached to last question')) : (<QuestionF\r\n                    handleNextQuestion={handleNextQuestion}\r\n                    handlePreviousQuestion={handlePreviousQuestion}\r\n                    data={questions[currentIndex]}\r\n                    totalLength={questions.length}\r\n                    currId={temp}\r\n                    finalR={props.resFun}\r\n                />)}\r\n        </div>\r\n    ) : <div className=\"container\">Loading...</div>\r\n    );\r\n}\r\nexport default QuestionService;\r\n"]},"metadata":{},"sourceType":"module"}