{"ast":null,"code":"var _jsxFileName = \"D:\\\\DAC Project\\\\E-Pariksha\\\\UI\\\\FinalUI\\\\react-ui\\\\E-Pariksha\\\\final\\\\src\\\\component\\\\ButtonGenerator.js\";\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nconst API_URL = \"http://localhost:8081/admin/getquestions\";\nexport default function ButtonGenerator(props) {\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    Axios.get(API_URL).then(res => res.data).then(data => {\n      const questions = data.map(question => ({ ...question\n      }));\n      setQuestions(questions);\n    });\n  }, []); // To pass index of button\n\n  const renderQuestion = event => {\n    const i = event.target.value;\n    props.handler(i - 1);\n  }; //To generate the buttons on right panel according to no.of question\n\n\n  var i;\n\n  const buttons = () => {\n    const row = [];\n\n    for (i = 1; i <= questions.length; i++) {\n      row.push( /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary m-2\",\n        style: {\n          width: '45px'\n        },\n        key: i,\n        onClick: renderQuestion,\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }\n      }, i));\n    }\n\n    return row;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, buttons()));\n}","map":{"version":3,"sources":["D:/DAC Project/E-Pariksha/UI/FinalUI/react-ui/E-Pariksha/final/src/component/ButtonGenerator.js"],"names":["React","useEffect","useState","Axios","API_URL","ButtonGenerator","props","questions","setQuestions","get","then","res","data","map","question","renderQuestion","event","i","target","value","handler","buttons","row","length","push","width"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,0CAAhB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACM,GAAN,CAAUL,OAAV,EACKM,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IADrB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,YAAML,SAAS,GAAGK,IAAI,CAACC,GAAL,CAAUC,QAAD,KAAe,EACtC,GAAGA;AADmC,OAAf,CAAT,CAAlB;AAEAN,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT,CAJ2C,CAc3C;;AACA,QAAMQ,cAAc,GAAIC,KAAD,IAAU;AAC9B,UAAMC,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AACAb,IAAAA,KAAK,CAACc,OAAN,CAAcH,CAAC,GAAC,CAAhB;AACF,GAHD,CAf2C,CAoB3C;;;AACA,MAAIA,CAAJ;;AACA,QAAMI,OAAO,GAAG,MAAM;AAClB,UAAMC,GAAG,GAAG,EAAZ;;AACA,SAAML,CAAC,GAAG,CAAV,EAAaA,CAAC,IAAIV,SAAS,CAACgB,MAA5B,EAAqCN,CAAC,EAAtC,EACA;AACIK,MAAAA,GAAG,CAACE,IAAJ,eAAS;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA/C;AAAkE,QAAA,GAAG,EAAER,CAAvE;AAA0E,QAAA,OAAO,EAAEF,cAAnF;AAAmG,QAAA,KAAK,EAAEE,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8GA,CAA9G,CAAT;AACH;;AACD,WAAOK,GAAP;AACH,GAPD;;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,OAAO,EAFf,CADA,CADJ;AASH","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport Axios from 'axios'\r\nconst API_URL = \"http://localhost:8081/admin/getquestions\";\r\n\r\nexport default function ButtonGenerator(props) {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(API_URL)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                const questions = data.map((question) => ({\r\n                    ...question}))\r\n                setQuestions(questions)\r\n            });\r\n    }, [])\r\n\r\n    // To pass index of button\r\n    const renderQuestion = (event) =>{\r\n       const i = event.target.value\r\n       props.handler(i-1);\r\n    }\r\n\r\n    //To generate the buttons on right panel according to no.of question\r\n    var i;\r\n    const buttons = () => {\r\n        const row = [];\r\n        for ( i = 1; i <= questions.length ; i++) \r\n        {\r\n            row.push(<button className=\"btn btn-primary m-2\" style={{ width: '45px' }} key={i} onClick={renderQuestion} value={i}>{i}</button>);\r\n        }\r\n        return row;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <div>\r\n            {\r\n                buttons()\r\n            }\r\n        </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}